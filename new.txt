docker run -d --name mysql-db -e MYSQL_ROOT_PASSWORD=db_pass123 mysql


---------------------------------------------------------

<!DOCTYPE html>
<html>
<head>
  <title>Welcome to My Website</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
    }

    h1 {
      color: #333;
    }

    p {
      color: #777;
    }
  </style>
</head>
<body>
  <h1>Welcome to My Website</h1>
  <p>HI ALL.</p>
  <p>This is created using Docker compose file.</p>
</body>
</html>


---------------------------------------------------------------


docker-compose exec db mysqladmin ping -h localhost --silent


docker-compose exec mysql admin ping -h localhost --silent


docker-compose ps --services --filter "status=running" | grep -qE "^(web|db)$"

 
docker-compose exec db mysql ping -h localhost --silent


docker-compose exec db mysql -uroot -p<password> -e "status"


docker-compose exec mysql mysql -uroot -p admin -e "status"


docker-compose exec mysql mysqladmin ping -h localhost --silent

----------------------------------------------------

Docker-compose.yaml:

version: '3'
services:
  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html
    networks:
      - my-network

  mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: my_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
	
===================================================


version: '3'
services:
  nginx:
    image: nginx
    container_name: task-3-nginx
    ports:
      - 80:80
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html
    networks:
      - my-network

  mysql:
    image: mysql
    container_name: task-3-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: my_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    networks:
      - my-network

networks:
  my-network:
    driver: bridge


----------------------------------------------------

#!/bin/bash

CONTAINER_NAMES=("task-3-nginx-1" "task-3-mysql-1")

# Iterate over container names
for CONTAINER_NAME in "${CONTAINER_NAMES[@]}"

do

  # Get the container's status
  STATUS=$(docker container inspect -f '{{.State.Status}}' $CONTAINER_NAME 2>/dev/null)

  # Check if the container is running
  if [ "$STATUS" = "running" ]; then
    echo "Container $CONTAINER_NAME is up and running."
  else
    echo "Container $CONTAINER_NAME is not running."
  fi
done

----------------------------------------

#!/bin/bash

CONTAINER_NAMES=("task-3-nginx-1" "task-3-mysql-1")

# Iterate over container names
for CONTAINER_NAME in "${CONTAINER_NAMES[@]}"
do
    # Get the container's status
    STATUS=$(docker container inspect -f '{{.State.Status}}' $CONTAINER_NAME 2>/dev/null)

    # Check if the container is running
    if [ "$STATUS" = "running" ]; then
      echo "Container $CONTAINER_NAME is up and running."

      # Check MySQL ping if it is the MySQL container
      if [ "$CONTAINER_NAME" = "task-3-mysql-1" ]; then
        echo "Checking if the MySQL is pinging"
        docker-compose exec mysql mysqladmin ping -h localhost -u root -p
      fi
     else
      echo "Container $CONTAINER_NAME is not running."
   fi
done

==========================================================

SCRIPT WITH EXIT CODES:


#!/bin/bash

CONTAINER_NAMES=("task-3-nginx-1" "task-3-mysql-1")

# Iterate over container names
for CONTAINER_NAME in "${CONTAINER_NAMES[@]}"
do
  # Get the container's status
  STATUS=$(docker container inspect -f '{{.State.Status}}' $CONTAINER_NAME 2>/dev/null)

  # Check if the container is running
  if [ "$STATUS" = "running" ]; then
    echo "Container $CONTAINER_NAME is up and running."

    # Check MySQL ping if it is the MySQL container
    if [ "$CONTAINER_NAME" = "task-3-mysql-1" ]; then
      echo "Checking MySQL ping..."
      docker-compose exec mysql mysqladmin ping -h localhost -u root -p

      # Check the exit code of the previous command
      if [ $? -eq 0 ]; then
        echo "MySQL ping successful."
      else
        echo "MySQL ping failed."
        exit 1
      fi
    fi
  else
    echo "Container $CONTAINER_NAME is not running."
    exit 1
  fi
done

exit 0

